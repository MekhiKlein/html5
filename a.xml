<?xml version="1.0" encoding="UTF-8"?>
<root>
    <Id>HashMap 的长度为什么是2的幂次方</Id>
    <content>1. 通过将 Key 的 hash 值与 length - 1 进行&运算，实现了当前 Key 的定位，2 的幂次方可以减少冲突（碰撞）的次数，
        提高 HashMap 查询效率

        2. 如果 length 为 2 的次幂 则 length-1 转化为二进制必定是 11111……的形式，在于 h 的二进制与操作效率会非常的快，
        而且空间不浪费；如果 length 不是 2 的次幂，比如 length 为 15，则 length - 1 为 14，对应的二进制为 1110，
        在于 h 与操作，最后一位都为 0 ，而 0001，0011，0101，1001，1011，0111，1101 这几个位置永远都不能存放元素了，
        空间浪费相当大，更糟的是这种情况中，数组可以使用的位置比数组长度小了很多，这意味着进一步增加了碰撞的几率，
        减慢了查询的效率！这样就会造成空间的浪费。
    </content>

</root>